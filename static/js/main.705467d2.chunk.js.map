{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/useSubstrate.js","substrate-lib/utils.js","substrate-lib/components/DeveloperConsole.js","substrate-lib/components/TxButton.js","AccountSelector.js","BlockNumber.js","Indices.js","society/Actions.js","society/Balance.js","society/Cards/BidCard.js","society/Bids.js","society/Cards/CandidateCard.js","society/Candidates.js","society/Cards/DefenderCard.js","society/Defender.js","society/Challenge.js","society/Cards/MemberCard.js","society/Members.js","society/Cards/FounderCard.js","society/Founder.js","society/Cards/HeadCard.js","society/Head.js","society/Pot.js","society/Rotation.js","society/Cards/SuspendedCandidateCard.js","society/SuspendedCandidates.js","society/Cards/SuspendedMemberCard.js","society/SuspendedMembers.js","ascii/society.js","ascii/rules.js","App.js","index.js"],"names":["config","require","reduce","mem","n","undefined","process","slice","INIT_STATE","socket","PROVIDER_SOCKET","types","CUSTOM_TYPES","keyring","keyringState","api","apiState","reducer","state","action","type","payload","Error","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","Provider","value","children","useSubstrate","useContext","connect","useCallback","a","provider","WsProvider","ApiPromise","create","_api","isReady","console","error","loadAccounts","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","useEffect","toFormat","BigJS","DeveloperConsole","window","util","util_crypto","TxButton","accountPair","label","setStatus","basic","primary","style","color","attrs","disabled","params","sudo","tx","isQuery","transaction","isInjected","web3FromSource","injected","fromParam","setSigner","signer","txExecute","e","toString","signAndSend","status","isFinalized","asFinalized","catch","query","result","Button","onClick","AccountSelector","setAccountAddress","useState","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","length","Menu","attached","tabular","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","size","position","target","rel","href","Icon","circular","Dropdown","search","selection","clearable","placeholder","options","onChange","_","dropdown","balances","freeBalance","BalanceAnnotation","accountBalance","setAccountBalance","unsubscribe","balance","then","unsub","Label","pointing","BlockNumber","finalized","blockNumber","setBlockNumber","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","unsubscribeAll","number","toNumber","timer","time","id","setInterval","clearInterval","Grid","Column","users","show","indices","setIndices","user","accounts","idToIndex","index","JSON","stringify","Main","tip","who","formState","setFormState","members","bids","candidates","suspendedMembers","suspendedCandidates","data","includes","Form","Input","society","vouch","some","bid","unbid","candidate","hoverable","trigger","Content","Bids","pot","setPot","TREASURY_ACCOUNT","stringToU8a","padEnd","encodeAddress","formatBalance","BidCard","proofs","Popup","Card","floated","image","Header","Meta","Description","kind","isDeposit","asDeposit","asVouch","extra","setBids","consts","rotationPeriod","u","userType","CandidateCard","votes","Modal","filter","v","vote","member","content","header","className","setVotes","setCandidates","promises","push","queryMulti","results","count","Candidates","DefenderCard","defender","Object","keys","voter","defenderVote","setDefender","challengePeriod","defenderVotes","multi","votesMap","acc","Defender","Rotation","MemberCard","strikes","setStrikes","setMembers","Members","FounderCard","founder","description","Founder","setFounder","founderDisplay","head","setHead","headDisplay","SuspendedCandidateCard","judgementOrigin","judgeSuspendedCandidate","setSuspendedCandidates","addresses","suspendedStatuses","suspended","i","isSome","Group","Suspended","SuspendedMemberCard","judgeSuspendedMember","setSuspendedMembers","isTrue","Banner","accountAddress","finalizedBlockNumber","setfinalizedBlockNumber","getPair","loader","Dimmer","active","Loader","contextRef","createRef","setDefaults","decimals","unit","ref","Sticky","context","hidden","stackable","columns","Row","centered","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.705467d2.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport config from '../config';\n\nconst INIT_STATE = {\n  socket: config.PROVIDER_SOCKET,\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiState: null\n};\n\nconst reducer = (state, action) => {\n  let socket = null;\n\n  switch (action.type) {\n    case 'RESET_SOCKET':\n      socket = action.payload || state.socket;\n      return { ...state, socket, api: null, apiState: null };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  return (\n    <SubstrateContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </SubstrateContext.Provider>\n  );\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nexport { SubstrateContext, SubstrateContextProvider };\n","import { useContext, useEffect, useCallback } from 'react';\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\nimport { SubstrateContext } from './SubstrateContext';\n\nconst useSubstrate = () => {\n  const [state, dispatch] = useContext(SubstrateContext);\n\n  // `useCallback` so that returning memoized function and not created\n  //   everytime, and thus re-render.\n  const { api, socket, types } = state;\n  const connect = useCallback(async () => {\n    if (api) return;\n\n    const provider = new WsProvider(socket);\n\n    try {\n      const _api = await ApiPromise.create({ provider, types });\n      dispatch({ type: 'CONNECT', payload: _api });\n      await _api.isReady;\n      dispatch({ type: 'CONNECT_SUCCESS' });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'CONNECT_ERROR' });\n    }\n  }, [api, socket, types, dispatch]);\n\n  // hook to get injected accounts\n  const { keyringState } = state;\n  const loadAccounts = useCallback(async () => {\n    // Ensure the method only run once.\n    if (keyringState) return;\n\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  }, [keyringState, dispatch]);\n\n  useEffect(() => {\n    connect();\n  }, [connect]);\n\n  useEffect(() => {\n    loadAccounts();\n  }, [loadAccounts]);\n\n  return { ...state, dispatch };\n};\n\nexport default useSubstrate;\n","import BigJS from 'big.js';\nimport toFormat from 'toformat';\n\nconst Big = toFormat(BigJS);\n\nconst utils = {\n  prettyBalance: function (amt, opts = {}) {\n    if (typeof amt !== 'number' && typeof amt !== 'string') {\n      throw new Error(`${amt} is not a number`);\n    }\n\n    // default option values\n    opts = { power: 8, decimal: 2, unit: 'Units', ...opts };\n\n    const bn = Big(amt);\n    const divisor = Big(10).pow(opts.power);\n    const displayed = bn.div(divisor).toFormat(opts.decimal);\n    return `${displayed.toString()} ${opts.unit}`;\n  }\n};\n\nexport default utils;\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api } = useSubstrate();\n  window.api = api;\n  window.util = require('@polkadot/util');\n  window.util_crypto = require('@polkadot/util-crypto');\n  window.keyring = require('@polkadot/keyring');\n\n  return null;\n}\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { web3FromSource } from '@polkadot/extension-dapp';\n\nimport { useSubstrate } from '../';\n\nexport default function TxButton ({\n  accountPair = null,\n  label,\n  setStatus,\n  basic = null,\n  primary = null,\n  style = null,\n  color = null,\n  type = null,\n  attrs = null,\n  disabled = false\n}) {\n  const { api } = useSubstrate();\n  const { params = null, sudo = false, tx = null } = attrs;\n  const isQuery = () => type === 'QUERY';\n\n  const transaction = async () => {\n    const {\n      address,\n      meta: { source, isInjected }\n    } = accountPair;\n    let fromParam;\n\n    // set the signer\n    if (isInjected) {\n      const injected = await web3FromSource(source);\n      fromParam = address;\n      api.setSigner(injected.signer);\n    } else {\n      fromParam = accountPair;\n    }\n    setStatus('Sending...');\n\n    let txExecute;\n    try {\n      // Check if tx has params\n      if (!params) {\n        txExecute = !sudo ? tx() : tx.sudo();\n      } else {\n        txExecute = !sudo ? tx(...params) : tx.sudo(...params);\n      }\n    } catch (e) {\n      console.error('ERROR forming transaction:', e);\n      setStatus(e.toString());\n    }\n\n    if (txExecute) {\n      txExecute\n        .signAndSend(fromParam, ({ status }) => {\n          status.isFinalized\n            ? setStatus(\n                `Completed at block hash #${status.asFinalized.toString()}`\n            )\n            : setStatus(`Current transaction status: ${status.type}`);\n        })\n        .catch(e => {\n          setStatus(':( transaction failed');\n          console.error('ERROR transaction:', e);\n        });\n    }\n  };\n\n  const query = async () => {\n    try {\n      const result = await tx(...params);\n      setStatus(result.toString());\n    } catch (e) {\n      console.error('ERROR query:', e);\n      setStatus(e.toString());\n    }\n  };\n\n  return (\n    <Button\n      primary={primary}\n      basic={basic}\n      style={style}\n      color={color}\n      type='submit'\n      onClick={isQuery() ? query : transaction}\n      disabled={disabled || !tx || (!isQuery() && !accountPair)}\n    >\n      {label}\n    </Button>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Menu,\n  Dropdown,\n  Container,\n  Icon,\n  Image,\n  Label\n} from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nexport default function AccountSelector (props) {\n  const { api, keyring } = useSubstrate();\n  const { setAccountAddress } = props;\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0].value : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountSelected(initialAddress);\n    setAccountAddress(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return (\n    <Menu\n      attached='top'\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em'\n      }}\n    >\n      <Container>\n        <Menu.Menu>\n          <Image src='Substrate-Logo.png' size='mini' />\n        </Menu.Menu>\n        <Menu.Menu position='right'>\n          {!accountSelected ? (\n            <span>\n              Add your account with the{' '}\n              <a\n                target='_blank'\n                rel=\"noopener noreferrer\"\n                href='https://github.com/polkadot-js/extension'\n              >\n                Polkadot JS Extension\n              </a>\n            </span>\n          ) : null}\n          <Icon\n            name='users'\n            size='large'\n            circular\n            color={accountSelected ? 'green' : 'red'}\n          />\n          <Dropdown\n            search\n            selection\n            clearable\n            placeholder='Select an account'\n            options={keyringOptions}\n            onChange={(_, dropdown) => {\n              onChange(dropdown.value);\n            }}\n            value={accountSelected}\n          />\n          {api.query.balances && api.query.balances.freeBalance ? (\n            <BalanceAnnotation accountSelected={accountSelected} />\n          ) : null}\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  );\n}\n\nfunction BalanceAnnotation (props) {\n  const { accountSelected } = props;\n  const { api } = useSubstrate();\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  // When account address changes, update subscriptions\n  useEffect(() => {\n    let unsubscribe;\n\n    // If the user has selected an address, create a new subscription\n    accountSelected &&\n      api.query.balances\n        .freeBalance(accountSelected, balance => {\n          setAccountBalance(balance.toString());\n        })\n        .then(unsub => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [accountSelected, api.query.balances]);\n\n  return accountSelected ? (\n    <Label pointing='left'>\n      <Icon\n        name='money bill alternate'\n        color={accountBalance > 0 ? 'green' : 'red'}\n      />\n      {accountBalance}\n    </Label>\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nexport default function BlockNumber(props) {\n  const { api } = useSubstrate();\n  const { finalized, blockNumber, setBlockNumber } = props;\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber, setBlockNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <div>{finalized ? \"FINALIZED \" : \"BLOCK \"}</div>\n      <div>{blockNumber}</div>\n    </Grid.Column>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { useSubstrate } from './substrate-lib';\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  const { users, show = false, indices, setIndices } = props;\n\n  useEffect(() => {\n    const unsubscribeAll = null;\n    for (const user of users) {\n      if (!(user in indices)) {\n        api.derive.accounts.idToIndex(user, index => {\n          if (index) {\n            setIndices({ ...indices, [user]: index });\n          }\n        });\n      }\n    }\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.derive.accounts, indices, setIndices, users]);\n\n  return show ? JSON.stringify(indices) : null;\n}\n","import React, { useState } from 'react';\nimport { Grid, Form, Input, Popup } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport { TxButton } from '../substrate-lib/components';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const [status, setStatus] = useState(null);\n  const [formState, setFormState] = useState({\n    value: '',\n    tip: '',\n    who: ''\n  });\n  const {\n    accountPair,\n    members,\n    bids,\n    candidates,\n    suspendedMembers,\n    suspendedCandidates\n  } = props;\n\n  const onChange = (_, data) =>\n    setFormState(formState => ({ ...formState, [data.state]: data.value }));\n\n  const { value, tip, who } = formState;\n\n  if (accountPair && members.includes(accountPair.address)) {\n    return (\n      <div>\n        <h2>You are a Member of the Society</h2>\n        <h3>Vouch for Others</h3>\n        <Form>\n          <Input\n            onChange={onChange}\n            placeholder='Who'\n            state='who'\n            type='text'\n            action\n          />\n          <Input\n            onChange={onChange}\n            placeholder='Bid Amount'\n            state='value'\n            type='text'\n            action\n          />\n          <Input\n            onChange={onChange}\n            placeholder='Tip Amount'\n            state='tip'\n            type='text'\n            action\n          />\n          <TxButton\n            accountPair={accountPair}\n            label='Place Vouch'\n            setStatus={setStatus}\n            type='TRANSACTION'\n            attrs={{\n              params: [who, value, tip],\n              tx: api.tx.society.vouch\n            }}\n          />\n        </Form>\n        {status}\n      </div>\n    );\n  } else if (\n    accountPair &&\n    bids.some(bid => bid.who.toString() === accountPair.address)\n  ) {\n    return (\n      <div>\n        <h2>You are a Bid</h2>\n        <h3>Wait for your bid to be accepted or unbid.</h3>\n        <Form>\n          <TxButton\n            accountPair={accountPair}\n            label='Unbid'\n            setStatus={setStatus}\n            type='TRANSACTION'\n            attrs={{\n              params: [],\n              tx: api.tx.society.unbid\n            }}\n          />\n        </Form>\n        {status}\n      </div>\n    );\n  } else if (\n    accountPair &&\n    candidates.some(\n      candidate => candidate.who.toString() === accountPair.address\n    )\n  ) {\n    return (\n      <div>\n        <h2>You are a Candidate</h2>\n        <h3>Ask members to vote for you!</h3>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Popup\n          hoverable\n          trigger={\n            <h1>&gt;&gt; Join the Society &lt;&lt;</h1>\n          }\n        >\n          <Popup.Content>\n\n            <h3>Make a Bid</h3>\n            <Form>\n              <Input\n                onChange={onChange}\n                placeholder='Bid Amount'\n                state='value'\n                type='text'\n                action\n              />\n              <TxButton\n                accountPair={accountPair}\n                label='Place Bid'\n                setStatus={setStatus}\n                type='TRANSACTION'\n                attrs={{\n                  params: [value],\n                  tx: api.tx.society.bid\n                }}\n              />\n            </Form>\n            {status}\n\n          </Popup.Content>\n        </Popup>\n      </div>\n    );\n  }\n}\n\nexport default function Bids(props) {\n  const { api } = useSubstrate();\n  return api.query.society && api.query.society.bids ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { stringToU8a, formatBalance } from '@polkadot/util';\nimport { encodeAddress } from '@polkadot/util-crypto';\n\nimport { useSubstrate } from '../substrate-lib';\nimport { TxButton } from '../substrate-lib/components';\n\nexport default function BlockNumber(props) {\n  const { accountPair } = props;\n  const { api } = useSubstrate();\n  const [pot, setPot] = useState(0);\n  const [status, setStatus] = useState('');\n\n  const TREASURY_ACCOUNT = stringToU8a('modlpy/socie'.padEnd(32, '\\0'));\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    api.query.balances\n      .freeBalance(TREASURY_ACCOUNT, balance => {\n        setPot(balance.toString());\n      })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [TREASURY_ACCOUNT, api.query.balances]);\n\n  return (\n    <Grid.Column>\n\n      <a style={{ \"color\": \"inherit\" }} target=\"_blank\" href={'https://polkascan.io/pre/kusama/account/' + encodeAddress(TREASURY_ACCOUNT)}>\n        <div>BALANCE</div>\n        <div>{formatBalance(pot)}</div>\n      </a>\n    </Grid.Column>\n\n  );\n}\n","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\n\nexport default function BidCard(props) {\n  const { accountPair, users, indices, proofs } = props;\n  if (users.length !== 0) {\n    return users.map(user => (\n      <Popup\n        hoverable\n        trigger={\n          <span> {indices[user.who]\n            ? indices[user.who].toString()\n            : user.who.toString()}</span>\n        }\n      >\n        <Popup.Content>\n          <Card\n            key={user.who.toString()}\n            color={accountPair.address === user.who.toString() ? 'green' : null}\n          >\n            <Card.Content>\n              <Image\n                floated='right'\n                size='mini'\n                src={proofs && proofs[user.who] ? proofs[user.who].image : 'https://i.imgur.com/Ip7AguC.png'}\n              />\n              <Card.Header>\n                {indices[user.who]\n                  ? indices[user.who].toString()\n                  : user.who.toString()}\n              </Card.Header>\n              <Card.Meta>\n                {indices[user.who] ? user.who.toString() : 'Candidate'}\n              </Card.Meta>\n              <Card.Description>\n                {user.kind.isDeposit ? (\n                  'Deposit Amount: ' + user.kind.asDeposit.toString()\n                ) : (\n                    <>\n                      {'Vouching Member: ' + user.kind.asVouch[0].toString()}\n                      <br />\n                      {'Vouching Tip: ' + user.kind.asVouch[1].toString()}\n                    </>\n                  )}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>{user.value.toString()}</Card.Content>\n          </Card>\n        </Popup.Content>\n      </Popup>\n    ));\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport BidCard from './Cards/BidCard';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const { accountPair, bids, setBids, blockNumber, indices, proofs } = props;\n\n  const rotationPeriod = api.consts.society.rotationPeriod.toNumber();\n\n  useEffect(() => {\n    let unsubscribe = null;\n\n    api.query.society\n      .bids(setBids)\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society, setBids]);\n\n  return (\n    <Grid.Column>\n      {bids.length > 0 ?\n        <h2>Bids:\n        <BidCard\n            users={bids}\n            userType={'Bid'}\n            accountPair={accountPair}\n            indices={indices}\n            proofs={proofs}\n          />\n        </h2>\n        : ''}\n    </Grid.Column>\n  );\n}\n\nexport default function Bids(props) {\n  const { api } = useSubstrate();\n  return api.query.society && api.query.society.bids ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React from 'react';\nimport { Card, Image, Popup, Icon, Modal } from 'semantic-ui-react';\nimport { TxButton } from '../../substrate-lib/components';\nimport { useSubstrate } from '../../substrate-lib';\n\nexport default function CandidateCard(props) {\n  const { api } = useSubstrate();\n\n  const { accountPair, setStatus, users, votes, members, indices, proofs } = props;\n\n  if (users.length !== 0) {\n    return users.map(user => (\n      <Popup\n        hoverable\n        trigger={\n          <span> {indices[user.who]\n            ? indices[user.who].toString()\n            : user.who.toString()}</span>\n        }\n      >\n        <Popup.Content>\n          <Card\n            key={user}\n            color={accountPair.address === user.who.toString() ? 'green' : null}\n          >\n            <Card.Content>\n              <Modal\n                trigger={\n                  <Image\n                    floated='right'\n                    size='mini'\n                    src={\n                      proofs && proofs[user.who]\n                        ? proofs[user.who].image\n                        : 'https://i.imgur.com/Ip7AguC.png'\n                    }\n                  />\n                }\n              >\n                <Modal.Content image>\n                  <Image\n                    src={\n                      proofs && proofs[user.who]\n                        ? proofs[user.who].image\n                        : 'https://i.imgur.com/Ip7AguC.png'\n                    }\n                  />\n                  <Modal.Description></Modal.Description>\n                </Modal.Content>\n              </Modal>\n              <Card.Header>\n                {indices[user.who]\n                  ? indices[user.who].toString()\n                  : user.who.toString()}\n              </Card.Header>\n              <Card.Meta>\n                {indices[user.who] ? user.who.toString() : 'Candidate'}\n              </Card.Meta>\n              <Card.Description>\n                {user.kind.toString()}\n                <br />\n                {votes\n                  .filter(v => v.candidate === user.who)\n                  .map(vote => {\n                    if (vote.vote.toString() === '0x02') {\n                      return (\n                        <Popup\n                          key={vote.candidate + vote.member}\n                          content={vote.member.toString()}\n                          header={'Approved'}\n                          trigger={<Icon circular color='green' name='checkmark' />}\n                        />\n                      );\n                    } else if (vote.vote.toString() === '0x01') {\n                      return (\n                        <Popup\n                          key={vote.candidate + vote.member}\n                          content={vote.member.toString()}\n                          header={'Rejected'}\n                          trigger={<Icon circular color='red' name='cancel' />}\n                        />\n                      );\n                    } else if (vote.vote.toString() === '0x00') {\n                      return (\n                        <Popup\n                          key={vote.candidate + vote.member}\n                          content={vote.member.toString()}\n                          header={'Skeptic'}\n                          trigger={\n                            <Icon circular color='yellow' name='exclamation' />\n                          }\n                        />\n                      );\n                    } else {\n                      return (\n                        <Popup\n                          key={vote.candidate + vote.member}\n                          content={vote.member.toString()}\n                          header={'Not Voted'}\n                          trigger={<Icon circular color='grey' name='question' />}\n                        />\n                      );\n                    }\n                  })}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              {user.value.toString()}\n              <div className='ui three buttons'>\n                <TxButton\n                  accountPair={accountPair}\n                  label='Reject'\n                  setStatus={setStatus}\n                  type='TRANSACTION'\n                  color='red'\n                  basic\n                  attrs={{\n                    params: [user.who, false],\n                    tx: api.tx.society.vote\n                  }}\n                  disabled={accountPair && !members.includes(accountPair.address)}\n                />\n                <TxButton\n                  accountPair={accountPair}\n                  label='Approve'\n                  setStatus={setStatus}\n                  type='TRANSACTION'\n                  color='green'\n                  basic\n                  attrs={{\n                    params: [user.who, true],\n                    tx: api.tx.society.vote\n                  }}\n                  disabled={accountPair && !members.includes(accountPair.address)}\n                />\n              </div>\n            </Card.Content>\n          </Card>\n        </Popup.Content>\n      </Popup>\n    ));\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport CandidateCard from './Cards/CandidateCard';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const [status, setStatus] = useState(null);\n  const [votes, setVotes] = useState([]);\n  const { accountPair, members, candidates, setCandidates, blockNumber, indices, proofs } = props;\n\n  const rotationPeriod = api.consts.society.rotationPeriod.toNumber();\n\n  useEffect(() => {\n    let unsubscribe = null;\n\n    api.query.society\n      .candidates(setCandidates)\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society, setCandidates]);\n\n  useEffect(() => {\n    var unsubscribe = null;\n\n    var promises = [];\n\n    for (var candidate of candidates) {\n      for (var member of members) {\n        promises.push([api.query.society.votes, [candidate.who, member]]);\n      }\n    }\n\n    api\n      .queryMulti(promises, results => {\n        var votes = [];\n        let count = 0;\n        for (var candidate of candidates) {\n          for (var member of members) {\n            votes.push({\n              candidate: candidate.who,\n              member: member,\n              vote: results[count]\n            });\n            count += 1;\n          }\n        }\n        setVotes(votes);\n      })\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api, api.query.society, candidates, members]);\n\n  return (\n    <div>\n      {candidates.length > 0 ?\n        <h2>Candidates:\n      <CandidateCard\n            users={candidates}\n            votes={votes}\n            accountPair={accountPair}\n            setStatus={setStatus}\n            members={members}\n            indices={indices}\n            proofs={proofs}\n          />\n        </h2>\n        : ''}\n      {status}\n    </div>\n  );\n}\n\nexport default function Candidates(props) {\n  const { api } = useSubstrate();\n  return api.query.society && api.query.society.bids ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useState } from 'react';\nimport { Card, Image, Icon, Popup, Modal } from 'semantic-ui-react';\nimport { TxButton } from '../../substrate-lib/components';\nimport { useSubstrate } from '../../substrate-lib';\n\nexport default function DefenderCard (props) {\n  const {\n    defender,\n    accountPair,\n    votes,\n    members,\n    indices,\n    proofs\n  } = props;\n  const { api } = useSubstrate();\n  const [status, setStatus] = useState(null);\n\n  if (defender) {\n    return (\n      <Card\n        color={accountPair.address === defender.toString() ? 'green' : null}\n      >\n        <Card.Content>\n          <Modal\n            trigger={\n              <Image\n                floated='right'\n                size='mini'\n                src={\n                  proofs && proofs[defender]\n                    ? proofs[defender].image\n                    : 'https://i.imgur.com/Ip7AguC.png'\n                }\n              />\n            }\n          >\n            <Modal.Content image>\n              <Image\n                src={\n                  proofs && proofs[defender]\n                    ? proofs[defender].image\n                    : 'https://i.imgur.com/Ip7AguC.png'\n                }\n              />\n              <Modal.Description></Modal.Description>\n            </Modal.Content>\n          </Modal>\n          <Card.Header>\n            {indices[defender]\n              ? indices[defender].toString()\n              : defender.toString()}\n          </Card.Header>\n          <Card.Meta>\n            {indices[defender] ? defender.toString() : 'Defender'}\n          </Card.Meta>\n          <Card.Description>\n            {Object.keys(votes).map(voter => {\n              if (votes[voter].toString() === '0x02') {\n                return (\n                  <Popup\n                    key={voter}\n                    content={voter}\n                    header={'Approved'}\n                    trigger={<Icon circular color='green' name='checkmark' />}\n                  />\n                );\n              } else if (votes[voter].toString() === '0x01') {\n                return (\n                  <Popup\n                    key={voter}\n                    content={voter}\n                    header={'Rejected'}\n                    trigger={<Icon circular color='red' name='cancel' />}\n                  />\n                );\n              } else {\n                return (\n                  <Popup\n                    key={voter}\n                    content={voter}\n                    header={'Not Voted'}\n                    trigger={<Icon circular color='grey' name='question' />}\n                  />\n                );\n              }\n            })}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <div className='ui three buttons'>\n            <TxButton\n              accountPair={accountPair}\n              label='Reject'\n              setStatus={setStatus}\n              type='TRANSACTION'\n              color='red'\n              basic\n              attrs={{\n                params: [false],\n                tx: api.tx.society.defenderVote\n              }}\n              disabled={accountPair && !members.includes(accountPair.address)}\n            />\n            <TxButton\n              accountPair={accountPair}\n              label='Approve'\n              setStatus={setStatus}\n              type='TRANSACTION'\n              color='green'\n              basic\n              attrs={{\n                params: [true],\n                tx: api.tx.society.defenderVote\n              }}\n              disabled={accountPair && !members.includes(accountPair.address)}\n            />\n          </div>\n          {status}\n        </Card.Content>\n      </Card>\n    );\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport DefenderCard from './Cards/DefenderCard';\nimport PeriodCard from './Cards/PeriodCard';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [defender, setDefender] = useState('');\n  const [votes, setVotes] = useState([]);\n\n  const { accountPair, members, blockNumber, indices, proofs } = props;\n\n  const challengePeriod = api.consts.society.challengePeriod.toNumber();\n\n  useEffect(() => {\n    let unsubscribe = null;\n\n    api.query.society\n      .defender(setDefender)\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society]);\n\n  useEffect(() => {\n    let unsubscribe = null;\n\n    api.query.society.defenderVotes\n      .multi(members, votes => {\n        const votesMap = members.reduce(\n          (acc, address, index) => ({\n            ...acc,\n            [address]: votes[index]\n          }),\n          {}\n        );\n        setVotes(votesMap);\n      })\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society, members]);\n\n  return (\n        <DefenderCard\n          defender={defender}\n          votes={votes}\n          accountPair={accountPair}\n          members={members}\n          indices={indices}\n          proofs={proofs}\n        />\n  );\n}\n\nexport default function Defender (props) {\n  const { api } = useSubstrate();\n  return api.query.society &&\n    api.query.society.defender &&\n    api.query.society.defenderVotes ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React from 'react';\nimport { Grid, Popup } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\n\nimport SocietyDefender from './Defender';\n\nfunction Main(props) {\n    const { api } = useSubstrate();\n    const { blockNumber, accountPair, members, indices, proofs } = props;\n\n    const challengePeriod = api.consts.society.challengePeriod.toNumber();\n\n    return (\n        <Grid.Column>\n                  <Popup\n        hoverable\n        trigger={\n            <div>\n            <div>CHALLENGE</div>\n            <div>{challengePeriod - (blockNumber % challengePeriod)}</div>\n          </div>\n        }\n      >\n        <Popup.Content>\n        <SocietyDefender\n              accountPair={accountPair}\n              members={members}\n              blockNumber={blockNumber}\n              indices={indices}\n              proofs={proofs}\n            />\n        </Popup.Content>\n      </Popup>\n\n        </Grid.Column>\n    );\n}\n\nexport default function Rotation(props) {\n    const { api } = useSubstrate();\n    return api.query.society && api.query.society.bids ? (\n        <Main {...props} />\n    ) : null;\n}\n","import React from 'react';\nimport { Card, Image, Modal, Popup } from 'semantic-ui-react';\n\nexport default function MemberCard(props) {\n  const { users, strikes, indices, proofs } = props;\n  if (users.length !== 0) {\n    return users.map((user, index) => (\n      <Popup\n        hoverable\n        trigger={\n          <span> {indices[user] ? indices[user].toString() : user.toString()}</span>\n        }\n      >\n        <Popup.Content>\n          <Card\n            key={user}\n            color={props.accountPair.address === user.toString() ? 'green' : null}\n          >\n            <Card.Content>\n              <Modal\n                trigger={\n                  <Image\n                    floated='right'\n                    size='mini'\n                    src={\n                      proofs && proofs[user]\n                        ? proofs[user].image\n                        : 'https://i.imgur.com/Ip7AguC.png'\n                    }\n                  />\n                }\n              >\n                <Modal.Content image>\n                  <Image\n                    src={\n                      proofs && proofs[user]\n                        ? proofs[user].image\n                        : 'https://i.imgur.com/Ip7AguC.png'\n                    }\n                  />\n                  <Modal.Description></Modal.Description>\n                </Modal.Content>\n              </Modal>\n              <Card.Header>\n                {indices[user] ? indices[user].toString() : user.toString()}\n              </Card.Header>\n              <Card.Meta>{indices[user] ? user.toString() : 'Member'}</Card.Meta>\n              <Card.Description>{'Description'}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>{'Strikes: ' + strikes[index]}</Card.Content>\n          </Card>\n        </Popup.Content>\n      </Popup>\n    ));\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport MemberCard from './Cards/MemberCard';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const [strikes, setStrikes] = useState([]);\n\n  const { accountPair, members, setMembers, indices, proofs } = props;\n\n  useEffect(() => {\n    let unsubscribe = null;\n\n    api.query.society\n      .members(setMembers)\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society, setMembers]);\n\n  useEffect(() => {\n    let unsubscribe = null;\n\n    api.query.society.strikes\n      .multi(members, setStrikes)\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society, members, strikes]);\n\n  return (\n    <div>\n      <h2>THE MEMBERS</h2>\n      <h3>\n        <MemberCard\n          users={members}\n          strikes={strikes}\n          accountPair={accountPair}\n          indices={indices}\n          proofs={proofs}\n        />\n        </h3>\n    </div>\n  );\n}\n\nexport default function Members(props) {\n  const { api } = useSubstrate();\n  return api.query.society && api.query.society.members ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React from 'react';\nimport { Card, Image, Modal } from 'semantic-ui-react';\n\nexport default function FounderCard (props) {\n  const { founder, accountPair, indices, proofs } = props;\n\n  if (founder) {\n    return (\n      <Card\n        color={\n          accountPair && accountPair.address === founder.toString()\n            ? 'green'\n            : null\n        }\n      >\n        <Card.Content>\n          <Modal\n            trigger={\n              <Image\n                floated='right'\n                size='mini'\n                src={\n                  proofs && proofs[founder]\n                    ? proofs[founder].image\n                    : 'https://i.imgur.com/Ip7AguC.png'\n                }\n              />\n            }\n          >\n            <Modal.Content image>\n              <Image\n                src={\n                  proofs && proofs[founder]\n                    ? proofs[founder].image\n                    : 'https://i.imgur.com/Ip7AguC.png'\n                }\n              />\n              <Modal.Description></Modal.Description>\n            </Modal.Content>\n          </Modal>\n          <Card.Header>\n            {indices[founder]\n              ? indices[founder].toString()\n              : founder.toString()}\n          </Card.Header>\n          <Card.Meta>\n            {indices[founder] ? founder.toString() : 'Founder'}\n          </Card.Meta>\n          <Card.Description>\n            {proofs[founder] ? proofs[founder].description : ''}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>{'Founder'}</Card.Content>\n      </Card>\n    );\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Grid, Popup } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\n\nimport FounderCard from './Cards/FounderCard';\n\nexport default function Founder(props) {\n  const { api } = useSubstrate();\n  const { accountPair, founder, setFounder, indices, proofs } = props;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    api.query.society.founder(founder => {\n      setFounder(founder.toString());\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    }).catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.query.society, setFounder]);\n\n  const founderDisplay = indices[founder] ? indices[founder].toString() : founder.toString();\n\n  return (\n    <Grid.Column>\n      <Popup\n        hoverable\n        trigger={\n          <div>\n            <div>FOUNDER</div>\n            <div>{founderDisplay}</div>\n          </div>\n        }\n      >\n        <Popup.Content>\n          <FounderCard\n            founder={founder}\n            accountPair={accountPair}\n            indices={indices}\n            proofs={proofs}\n          />\n        </Popup.Content>\n      </Popup>\n    </Grid.Column>\n  );\n}\n","import React from 'react';\nimport { Card, Image, Modal } from 'semantic-ui-react';\n\nexport default function FounderCard (props) {\n  const { head, accountPair, indices, proofs } = props;\n\n  if (head) {\n    return (\n      <Card\n        color={\n          accountPair && accountPair.address === head.toString()\n            ? 'green'\n            : null\n        }\n      >\n        <Card.Content>\n          <Modal\n            trigger={\n              <Image\n                floated='right'\n                size='mini'\n                src={\n                  proofs && proofs[head]\n                    ? proofs[head].image\n                    : 'https://i.imgur.com/Ip7AguC.png'\n                }\n              />\n            }\n          >\n            <Modal.Content image>\n              <Image\n                src={\n                  proofs && proofs[head]\n                    ? proofs[head].image\n                    : 'https://i.imgur.com/Ip7AguC.png'\n                }\n              />\n              <Modal.Description></Modal.Description>\n            </Modal.Content>\n          </Modal>\n          <Card.Header>\n            {indices[head] ? indices[head].toString() : head.toString()}\n          </Card.Header>\n          <Card.Meta>{indices[head] ? head.toString() : 'Head'}</Card.Meta>\n          <Card.Description>{'description'}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>{'Head'}</Card.Content>\n      </Card>\n    );\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Grid, Popup } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\n\nimport HeadCard from './Cards/HeadCard';\n\nexport default function Founder(props) {\n  const { api } = useSubstrate();\n  const { accountPair, head, setHead, indices, proofs } = props;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    api.query.society.head(head => {\n      setHead(head.toString());\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    }).catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.query.society, head, setHead]);\n\n  const headDisplay = indices[head] ? indices[head].toString() : head.toString();\n\n  return (\n    <Grid.Column>\n\n      <Popup\n        hoverable\n        trigger={\n          <div>\n            <div>HEAD</div>\n            <div>{headDisplay}</div>\n          </div>\n        }\n      >\n        <Popup.Content>\n          <HeadCard\n            head={head}\n            accountPair={accountPair}\n            indices={indices}\n            proofs={proofs}\n          />\n        </Popup.Content>\n      </Popup>\n    </Grid.Column>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport { formatBalance } from '@polkadot/util';\n\nexport default function BlockNumber(props) {\n  const { api } = useSubstrate();\n  const [pot, setPot] = useState(0);\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    api.query.society.pot(number => {\n      setPot(number.toString());\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    }).catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.query.society]);\n\n  return (\n    <Grid.Column>\n\n      <div>POT</div>\n      <div>{formatBalance(pot)}</div>\n    </Grid.Column>\n  );\n}\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\n\nfunction Main(props) {\n    const { api } = useSubstrate();\n    const { blockNumber} = props;\n\n    const rotationPeriod = api.consts.society.rotationPeriod.toNumber();\n\n    return (\n        <Grid.Column>\n            <div>ROTATION</div>\n            <div>{rotationPeriod - (blockNumber % rotationPeriod)}</div>\n        </Grid.Column>\n    );\n}\n\nexport default function Rotation(props) {\n    const { api } = useSubstrate();\n    return api.query.society && api.query.society.bids ? (\n        <Main {...props} />\n    ) : null;\n}\n","import React from 'react';\nimport { Card, Image, Popup } from 'semantic-ui-react';\nimport { TxButton } from '../../substrate-lib/components';\nimport { useSubstrate } from '../../substrate-lib';\n\nexport default function SuspendedCandidateCard(props) {\n  const { api } = useSubstrate();\n\n  const { accountPair, setStatus, judgementOrigin, users } = props;\n\n  if (users.length !== 0) {\n    return users.map(user => (\n      <Popup\n        hoverable\n        trigger={\n          <span> {user.toString()}</span>\n        }\n      >\n        <Popup.Content>\n          <Card key={user.toString()}>\n            <Card.Content>\n              <Image\n                floated='right'\n                size='mini'\n                src='https://i.imgur.com/Ip7AguC.png'\n              />\n              <Card.Header>{user.toString()}</Card.Header>\n              <Card.Meta>Suspended Candidate</Card.Meta>\n              <Card.Description>\n                Contact the founder to be judged.\n          </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div className='ui three buttons'>\n                <TxButton\n                  accountPair={accountPair}\n                  label='Reject'\n                  setStatus={setStatus}\n                  type='TRANSACTION'\n                  color='red'\n                  basic\n                  attrs={{\n                    params: [user, 1],\n                    tx: api.tx.society.judgeSuspendedCandidate\n                  }}\n                  disabled={accountPair && accountPair.address !== judgementOrigin}\n                />\n                <TxButton\n                  accountPair={accountPair}\n                  label='Rebid'\n                  setStatus={setStatus}\n                  type='TRANSACTION'\n                  color='grey'\n                  basic\n                  attrs={{\n                    params: [user, 0],\n                    tx: api.tx.society.judgeSuspendedCandidate\n                  }}\n                  disabled={accountPair && accountPair.address !== judgementOrigin}\n                />\n                <TxButton\n                  accountPair={accountPair}\n                  label='Approve'\n                  setStatus={setStatus}\n                  type='TRANSACTION'\n                  color='green'\n                  basic\n                  attrs={{\n                    params: [user, 2],\n                    tx: api.tx.society.judgeSuspendedCandidate\n                  }}\n                  disabled={accountPair && accountPair.address !== judgementOrigin}\n                />\n              </div>\n            </Card.Content>\n          </Card>\n        </Popup.Content>\n      </Popup>\n    ));\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport SuspendedCandidateCard from './Cards/SuspendedCandidateCard';\n\nfunction Main(props) {\n  const { api, keyring } = useSubstrate();\n  const [status, setStatus] = useState(null);\n\n  const {\n    accountPair,\n    founder,\n    suspendedCandidates,\n    setSuspendedCandidates\n  } = props;\n\n  useEffect(() => {\n    const addresses = keyring.getPairs().map(account => account.address);\n    let unsubscribe = null;\n    api.query.society.suspendedCandidates\n      .multi(addresses, suspendedStatuses => {\n        const suspended = [];\n        for (const i in suspendedStatuses) {\n          if (suspendedStatuses[i].isSome) {\n            suspended.push(addresses[i]);\n          }\n        }\n        setSuspendedCandidates(suspended);\n      })\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society.suspendedCandidates, keyring, setSuspendedCandidates]);\n\n  return (\n    <div>\n      {suspendedCandidates.length > 0 ?\n        <div>Suspended Candidates:\n      <Card.Group>\n            <SuspendedCandidateCard\n              users={suspendedCandidates}\n              accountPair={accountPair}\n              setStatus={setStatus}\n              judgementOrigin={founder}\n            />\n          </Card.Group>\n        </div>\n        : ''}\n      {status}\n    </div>\n  );\n}\n\nexport default function Suspended(props) {\n  const { api } = useSubstrate();\n  return api.query.society && api.query.society.suspendedCandidates ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport { TxButton } from '../../substrate-lib/components';\nimport { useSubstrate } from '../../substrate-lib';\n\nexport default function SuspendedMemberCard (props) {\n  const { api } = useSubstrate();\n\n  const { accountPair, setStatus, users, judgementOrigin } = props;\n\n  if (users.length !== 0) {\n    return users.map(user => (\n      <Card\n        key={user}\n        color={accountPair.address === user.toString() ? 'green' : null}\n      >\n        <Card.Content>\n          <Image\n            floated='right'\n            size='mini'\n            src='https://i.imgur.com/Ip7AguC.png'\n          />\n          <Card.Header>{user}</Card.Header>\n          <Card.Meta>Suspended Member</Card.Meta>\n          <Card.Description>\n            Contact the founder to be judged.\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <div className='ui three buttons'>\n            <TxButton\n              accountPair={accountPair}\n              label='Kick'\n              setStatus={setStatus}\n              type='TRANSACTION'\n              color='red'\n              basic\n              attrs={{\n                params: [user, false],\n                tx: api.tx.society.judgeSuspendedMember\n              }}\n              disabled={accountPair && accountPair.address !== judgementOrigin}\n            />\n            <TxButton\n              accountPair={accountPair}\n              label='Forgive'\n              setStatus={setStatus}\n              type='TRANSACTION'\n              color='green'\n              basic\n              attrs={{\n                params: [user, true],\n                tx: api.tx.society.judgeSuspendedMember\n              }}\n              disabled={accountPair && accountPair.address !== judgementOrigin}\n            />\n          </div>\n        </Card.Content>\n      </Card>\n    ));\n  } else {\n    return null;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../substrate-lib';\nimport SuspendedMemberCard from './Cards/SuspendedMemberCard';\n\nfunction Main(props) {\n  const { api, keyring } = useSubstrate();\n  const [status, setStatus] = useState(null);\n\n  const { accountPair, founder, suspendedMembers, setSuspendedMembers } = props;\n\n  useEffect(() => {\n    const addresses = keyring.getPairs().map(account => account.address);\n    let unsubscribe = null;\n    api.query.society.suspendedMembers\n      .multi(addresses, suspendedStatuses => {\n        const suspended = [];\n        for (const i in suspendedStatuses) {\n          if (suspendedStatuses[i].isTrue) {\n            suspended.push(addresses[i]);\n          }\n        }\n        setSuspendedMembers(suspended);\n      })\n      .then(u => {\n        unsubscribe = u;\n      })\n      .catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.society.suspendedMembers, keyring, setSuspendedMembers]);\n\n  return (\n    <div>\n      {suspendedMembers.length > 0 ?\n        <h2>Suspended Members\n      <Card.Group>\n            <SuspendedMemberCard\n              users={suspendedMembers}\n              accountPair={accountPair}\n              setStatus={setStatus}\n              judgementOrigin={founder}\n            />\n          </Card.Group>\n        </h2>\n        : ''}\n      {status}\n    </div>\n  );\n}\n\nexport default function Suspended(props) {\n  const { api } = useSubstrate();\n  return api.query.society && api.query.society.suspendedMembers ? (\n    <Main {...props} />\n  ) : null;\n}\n","/* eslint-disable */\nimport React from 'react';\n\nexport default function Banner() {\n    return (\n        <pre>\n            <code>{`\n.dP\"Y8 88   88 88\"\"Yb .dP\"Y8 888888 88\"\"Yb    db    888888 888888 \n\\`Ybo.\" 88   88 88__dP \\`Ybo.\"   88   88__dP   dPYb     88   88__   \no.\\`Y8b Y8   8P 88\"\"Yb o.\\`Y8b   88   88\"Yb   dP__Yb    88   88\"\"   \n8bodP' \\`YbodP' 88oodP 8bodP'   88   88  Yb dP\"\"\"\"Yb   88   888888 \n\n ad88888ba     ,ad8888ba,      ,ad8888ba,   88  88888888888  888888888888  8b        d8  \nd8\"     \"8b   d8\"'    \\`\"8b    d8\"'    \\`\"8b  88  88                88        Y8,    ,8P   \nY8,          d8'        \\`8b  d8'            88  88                88         Y8,  ,8P    \n\\`Y8aaaaa,    88          88  88             88  88aaaaa           88          \"8aa8\"     \n  \\`\"\"\"\"\"8b,  88          88  88             88  88\"\"\"\"\"           88           \\`88'      \n        \\`8b  Y8,        ,8P  Y8,            88  88                88            88       \nY8a     a8P   Y8a.    .a8P    Y8a.    .a8P  88  88                88            88       \n \"Y88888P\"     \\`\"Y8888Y\"'      \\`\"Y8888Y\"'   88  88888888888       88            88       \n\n\n==========================================================================================\n==========================================================================================\n    `}\n            </code>\n        </pre>\n    )\n}","/* eslint-disable */\nimport React from 'react';\n\nexport default function Banner() {\n    const rulesTx =\n        '0x948d3a4378914341dc7af9220a4c73acb2b3f72a70f14ee8089799da16d94c17';\n\n    return (\n        <div>\n            <pre>\n                <code>{`\n==========================================================================================\n==========================================================================================\n`}\n                </code>\n            </pre>\n            <a style={{\"color\": \"inherit\"}} target=\"_blank\" href={'https://polkascan.io/pre/kusama-cc3/transaction/' + rulesTx}>\n\n                <pre>\n                    <code>{`\n888888 88  88 888888     88\"\"Yb 88   88 88     888888 .dP\"Y8 \n  88   88  88 88__       88__dP 88   88 88     88__   \\`Ybo.\" \n  88   888888 88\"\"       88\"Yb  Y8   8P 88  .o 88\"\"   o.\\`Y8b \n  88   88  88 888888     88  Yb \\`YbodP' 88ood8 888888 8bodP' \n    `}\n                    </code>\n                </pre>\n            </a>\n        </div>\n    )\n}","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport AccountSelector from './AccountSelector';\nimport BlockNumber from './BlockNumber';\nimport Events from './Events';\nimport Metadata from './Metadata';\nimport NodeInfo from './NodeInfo';\nimport Indices from './Indices';\nimport SocietyActions from './society/Actions';\nimport SocietyBalance from './society/Balance';\nimport SocietyBids from './society/Bids';\nimport SocietyCandidates from './society/Candidates';\nimport SocietyChallenge from './society/Challenge';\nimport SocietyDefender from './society/Defender';\nimport SocietyMembers from './society/Members';\nimport SocietyFounder from './society/Founder';\nimport SocietyHead from './society/Head';\nimport SocietyPot from './society/Pot';\nimport SocietyRotation from './society/Rotation';\nimport SocietyRules from './society/Rules';\nimport SocietySuspendedCandidates from './society/SuspendedCandidates';\nimport SocietySuspendedMembers from './society/SuspendedMembers';\nimport { formatBalance } from '@polkadot/util';\n\nimport Break from './ascii/break';\nimport SocietyBanner from './ascii/society';\nimport RulesBanner from './ascii/rules';\n\nimport proofs from './config/proofs.json';\n\nfunction Main() {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState } = useSubstrate();\n  const [head, setHead] = useState([]);\n  const [founder, setFounder] = useState([]);\n  const [bids, setBids] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [suspendedCandidates, setSuspendedCandidates] = useState([]);\n  const [suspendedMembers, setSuspendedMembers] = useState([]);\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [finalizedBlockNumber, setfinalizedBlockNumber] = useState(0);\n  const [indices, setIndices] = useState({});\n\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text => (\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>\n  );\n\n  if (apiState === 'ERROR') return loader('Error connecting to the blockchain');\n  else if (apiState !== 'READY') return loader('Connecting to the blockchain');\n\n  if (keyringState !== 'READY') {\n    return loader(\n      \"Loading accounts (please review any extension's authorization)\"\n    );\n  }\n\n  const contextRef = createRef();\n\n  formatBalance.setDefaults({ decimals: 12, unit: '' });\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef} hidden>\n        <AccountSelector setAccountAddress={setAccountAddress} />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row>\n            <BlockNumber\n              blockNumber={blockNumber}\n              setBlockNumber={setBlockNumber}\n            />\n            <BlockNumber\n              blockNumber={finalizedBlockNumber}\n              setBlockNumber={setfinalizedBlockNumber}\n              finalized\n            />\n            <SocietyRotation blockNumber={blockNumber}/>\n            <SocietyChallenge\n              blockNumber={blockNumber}\n              accountPair={accountPair}\n              members={members}\n              indices={indices}\n              />\n            <SocietyPot />\n            <SocietyBalance accountPair={accountPair} />\n            <SocietyFounder\n              accountPair={accountPair}\n              founder={founder}\n              setFounder={setFounder}\n              indices={indices}\n              proofs={proofs}\n            />\n            <SocietyHead\n              accountPair={accountPair}\n              head={head}\n              setHead={setHead}\n              indices={indices}\n              proofs={proofs}\n            />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietyBanner />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietyMembers\n              accountPair={accountPair}\n              members={members}\n              setMembers={setMembers}\n              indices={indices}\n              proofs={proofs}\n            />\n          </Grid.Row>\n          <Grid.Row centered>\n            <RulesBanner />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietyActions\n              accountPair={accountPair}\n              members={members}\n              candidates={candidates}\n              suspendedCandidates={suspendedCandidates}\n              suspendedMembers={suspendedMembers}\n              bids={bids}\n              proofs={proofs}\n            />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietyBids\n              accountPair={accountPair}\n              bids={bids}\n              setBids={setBids}\n              blockNumber={blockNumber}\n              indices={indices}\n              proofs={proofs}\n            />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietyCandidates\n              accountPair={accountPair}\n              members={members}\n              candidates={candidates}\n              setCandidates={setCandidates}\n              blockNumber={blockNumber}\n              indices={indices}\n              proofs={proofs}\n            />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietySuspendedCandidates\n              accountPair={accountPair}\n              suspendedCandidates={suspendedCandidates}\n              setSuspendedCandidates={setSuspendedCandidates}\n              founder={founder}\n              indices={indices}\n              proofs={proofs}\n            />\n          </Grid.Row>\n          <Grid.Row centered>\n            <SocietySuspendedMembers\n              accountPair={accountPair}\n              suspendedMembers={suspendedMembers}\n              setSuspendedMembers={setSuspendedMembers}\n              founder={founder}\n              indices={indices}\n              proofs={proofs}\n            />\n          </Grid.Row>\n        </Grid>\n        <DeveloperConsole />\n        <Indices\n          users={[\n            ...bids.map(b => b.who),\n            ...candidates.map(c => c.who),\n            ...members\n          ]}\n          indices={indices}\n          setIndices={setIndices}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}